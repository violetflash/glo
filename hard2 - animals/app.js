'use strict';

const print1 = function() {
    console.log('Крот');
};
const print2 = function() {
    console.log('овце,');
};
const print3 = function() {
    console.log('жирафу,');
};
const print4 = function() {
    console.log('зайке');
};
const print5 = function() {
    console.log('голубые');
};
const print6 = function() {
    console.log('сшил');
};
const print7 = function() {
    console.log('фуфайки');
};

const func1 = function() {
    print3();//жирафу    //выполнится сразу. В стек:1-4
};

const func2 = function() {
    func1(); //выполняется сразу. В стек:1-3

    setTimeout(() => { //после вызова func2 уходит в браузер ждать 1000мс. В очереди: 2/=> В очереди: 1/=>в стек:4-1
        // ...
        // print7(); //фуфайки
        print6();
    }, 1000);
};

const func3 = function() {
    setTimeout(() => { //после вызова func3 уходит в браузер ждать 250мс. В очереди:1 /=>В стек:1-1
        func2(); //выполняется сразу. В стек:1-2
        // ...
        print4(); //зайке   //выполняется сразу. В стек:1-5. Стек очищается(2-новый стек)
    }, 250);
    // ...
    print2(); //овце    //выполнится сразу после вызова функ3. В стек:0-3 Стек очищается(1-новый стек)
};

//СТАРТ
setTimeout(() => { //уходит в браузер ждать 500мс. В очереди: 2 /=> В очереди:1 /=> В стек:2-1
    // ...
    print5(); //голубые //выполняется сразу. В стек:2-2. Стек очищается(3-новый стек)
    setTimeout(() => {  //уходит ждать 750мс. В очереди: 1
        // ...
        // print6(); //сшил    //выполнится сразу.В стек:3-1. Стек очищается(4-новый стек)
        print7(); //фуфайки

    }, 750);
}, 500);

// ...

print1(); //крот    //выполнится сразу. В стек:0-1

func3(); //выполнится сразу. В стек:0-2
